#+TITLE: Сервис простого калькулятора с REST API

** О сервисе
Простой калькулятор, умеющий решать выражения любой сложности с четырьмя базовыми операциями:
- сложение
- вычитание
- умножение
- деление

Также поддерживаются выражения в скобках, например:
- операции с простыми интами ~7 + 3 * (10 / (12 / (3 + 1) - 1))~
- операции с числами с плавающей запятой ~2.4 * ((2.841 + 5.8812) + ((3.193 * 8.3912) * (2.577 + 5.3742))~

Унарные операторы не поддерживаются.

API построен на основе библиотеки ~Gin~. В качестве хранилища истории операций, для простоты используется БД ~SQLite~. Для логирования в планируется использовать ~logrus~.

По умолчанию error и fatal логи пишутся в stderr, а debug, info, warning в stdout.
** Реализовано
- [X] простой калькулятор математических выржаений
- [X] методы апи:
  + [X] решить уравнение
  + [X] получить всю историю
  + [X] получить историю за период времени
- [X] хранение истории в sqlite
- [X] деплой с помощью ~docker-compose~
- [X] улучшенное логгирование
- [X] документация
- [X] тесты:
  - [X] калькулятора
  - [X] записи в БД
** Быстрый старт
Проверено на машинах под управлением Linux x64

1. Создать директорию на хосте ~ ~/db~, либо в файле [[https://github.com/IngvarListard/not-so-simple-calculator/blob/master/deploy/docker-compose.yml#L13][docker-compose.yml]] изменить строку ~source: ~/db~ на желаемую;
2. Запустить ~docker-compose -f deploy/docker-compose.yml up --build~

В директории ~~/db~ будет храниться база данных ~SQLite~ в которую будет записываться история операций.

По умолчанию в докере сервер запускается на 3000 порту.

[[https://github.com/IngvarListard/not-so-simple-calculator/tree/master/api][Документация к методам API]]
** Переменные окружения
#+begin_src
+------------+-------------------------------+-------------+----------------------------------+
| Имя        |Допустимые значения            |Обязательно  |Описание                          |
|            |                               |             |                                  |
+------------+-------------------------------+-------------+----------------------------------+
|SQLITE_PATH | Любая строка с указанием пути |     да      | Путь до БД SQLite                |
|            |внутри контейнера              |             |                                  |
|            |                               |             |                                  |
|            |                               |             |                                  |
|            |                               |             |                                  |
|            |                               |             |                                  |
|            |                               |             |                                  |
+------------+-------------------------------+-------------+----------------------------------+
|LOGS_TO_FILE| Строка с указанием пути до    |     нет     | Включение режима записи логов в  |
|            |файла логов                    |             |файл. Если не указан, то логи     |
|            |                               |             |будут писаться в stderr и stdout  |
|            |                               |             |                                  |
+------------+-------------------------------+-------------+----------------------------------+
|LOG_LEVEL   |Допустимые значения:           |     нет     | Конфигурация уровня логгирования.|
|            |                               |             |По умолчанию debug                |
|            |- debug                        |             |                                  |
|            |                               |             |                                  |
|            |- info                         |             |                                  |
|            |                               |             |                                  |
|            |- warning                      |             |                                  |
|            |                               |             |                                  |
|            |- error                        |             |                                  |
|            |                               |             |                                  |
|            |- fatal                        |             |                                  |
+------------+-------------------------------+-------------+----------------------------------+
|LOGS_TO_JSON|Булевое значение, true или     |     нет     |Включение записи логов в формате  |
|            |false                          |             |json. По умолчанию false          |
+------------+-------------------------------+-------------+----------------------------------+
|ACCESS_LOG  |Булевое значение, true или     |     нет     |Если false, access log не ведется |
|            |false                          |             |                                  |
+------------+-------------------------------+-------------+----------------------------------+
#+end_src
** Структура проекта
#+begin_src
├── cmd
│   └── calculator
│       └── main.go                     - main для калькулятора
├── deploy
│   ├── docker-compose.yml
│   └── Dockerfile
├── go.mod
├── go.sum
├── internal
│   └── calcapp
│       ├── api                         - методы API
│       │   └── api.go
│       ├── config.go                   - модель конфига сервера
│       ├── database.go                 - вспомогательные функции подключения к БД
│       ├── errors                      - кастомная модель ошибок в приложении
│       │   └── errors.go
│       ├── logging                     - конструктор логгера
│       │   └── logging.go
│       ├── models                      - модели БД
│       │   ├── history.go
│       │   └── testing.go
│       ├── server
│       │   ├── calcserv                - имплементация сервера
│       │   │   └── server.go
│       │   └── iserver.go
│       └── store                       - репозиторий для общения с БД
│           ├── fixtures                - фикстуры для тестов БД
│           │   ├── history.go
│           │   └── json_fixture.go
│           ├── sqlstore                - имплементация репозитория
│           │   ├── historyrep.go
│           │   ├── historyrepository_test.go
│           │   ├── store.go
│           │   └── testing.go
│           ├── repository.go
│           └── store.go
├── pkg
│   └── calc
│       ├── calc.go
│       ├── calc_test.go
│       └── generic.go
├── README.org
└── todos.org
#+end_src
